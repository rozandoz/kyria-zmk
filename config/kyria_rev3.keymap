/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    behaviors {
        ht_caps: ht_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_CAPS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "hold-preferred";
        };

        ht_layer: ht_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        ht_hrm_left: ht_hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HRM_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49>;
            hold-trigger-on-release;
        };

        ht_hrm_right: ht_hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HRM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 31 40 41 42 43 44 45 46 47 48 49>;
        };

        ht_hrm_left_fast: ht_hrm_left_fast {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HRM_LEFT_FAST";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49>;
            hold-trigger-on-release;
        };

        ht_hrm_right_fast: ht_hrm_right_fast {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HRM_RIGHT_FAST";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 31 40 41 42 43 44 45 46 47 48 49>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <15 20>;
            layers = <0>;
            require-prior-idle-ms = <150>;
            timeout-ms = <50>;
        };

        layout_switch {
            bindings = <&win_layout_switch>;
            key-positions = <26 27>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };
    };

    macros {
        win_layout_switch: win_layout_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LSHIFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "WIN_LAYOUT_SWITCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default-layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TAB                       &kp Q                    &kp W                    &kp E                       &kp R                        &kp T                                                             &kp Y                  &kp U                          &kp I                             &kp O                     &kp P                              &kp LBKT
&ht_caps LEFT_CONTROL ESCAPE  &ht_hrm_left LEFT_GUI A  &ht_hrm_left LEFT_ALT S  &ht_hrm_left_fast LSHIFT D  &ht_hrm_left LEFT_CONTROL F  &kp G                                                             &kp H                  &ht_hrm_right RIGHT_CONTROL J  &ht_hrm_right_fast RIGHT_SHIFT K  &ht_hrm_right LEFT_ALT L  &ht_hrm_right RIGHT_GUI SEMICOLON  &kp SQT
&kp GRAVE                     &kp Z                    &kp X                    &kp C                       &kp V                        &kp B              &caps_word  &trans  &mo 6   &trans             &kp N                  &kp M                          &kp COMMA                         &kp DOT                   &kp FSLH                           &kp RIGHT_BRACKET
                                                                                &kp LEFT_GUI                &ht_layer 5 ESCAPE           &ht_layer 1 SPACE  &kp TAB     &trans  &trans  &ht_layer 3 ENTER  &ht_layer 2 BACKSPACE  &ht_layer 4 DEL                &kp RIGHT_ALT
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                                  &kp C_AC_UNDO  &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_REDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &trans                                  &kp LEFT       &kp DOWN        &kp UP         &kp RIGHT     &trans         &kp CAPSLOCK
&trans  &trans    &trans    &trans     &trans     &trans  &trans  &trans  &trans  &trans  &kp HOME       &kp PAGE_DOWN   &kp PAGE_UP    &kp END       &kp INSERT     &trans
                            &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans         &trans          &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &kp LBKT       &kp N7  &kp N8  &kp N9   &kp RBKT                                      &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT     &trans    &trans
&trans  &kp PLUS       &kp N4  &kp N5  &kp N6   &kp EQUAL                                     &trans    &kp RCTRL  &kp RSHFT  &kp LEFT_ALT  &kp RGUI  &trans
&trans  &kp BACKSLASH  &kp N1  &kp N2  &kp N3   &kp PIPE   &trans     &trans  &trans  &trans  &trans    &trans     &trans     &trans        &trans    &trans
                               &trans  &kp DOT  &kp N0     &kp MINUS  &trans  &trans  &trans  &trans    &trans     &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPS   &kp PERCENT  &kp ASTERISK          &kp RIGHT_BRACE                                           &trans  &trans     &trans     &trans        &trans    &trans
&trans  &kp PLUS        &kp CARET  &kp UNDER    &kp DOLLAR            &kp EQUAL                                                 &trans  &kp RCTRL  &kp RSHFT  &kp LEFT_ALT  &kp RGUI  &trans
&trans  &kp BACKSLASH   &kp EXCL   &kp AT       &kp HASH              &kp PIPE               &trans     &trans  &trans  &trans  &trans  &trans     &trans     &trans        &trans    &trans
                                   &trans       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &trans  &trans  &trans  &trans  &trans     &trans
            >;
        };

        f-layer {
            bindings = <
&trans  &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F10                                      &trans  &trans     &trans     &trans        &trans    &trans
&trans  &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11                                      &trans  &kp RCTRL  &kp RSHFT  &kp LEFT_ALT  &kp RGUI  &trans
&trans  &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans  &trans  &trans  &trans  &trans     &trans     &trans        &trans    &trans
                                 &trans  &trans  &trans   &kp C_MENU  &trans  &trans  &trans  &trans  &trans     &trans
            >;
        };

        media_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                      &trans          &trans        &trans        &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                      &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans          &trans        &trans        &trans      &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &kp C_MUTE  &kp C_PP        &trans        &trans
            >;
        };

        bt_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans          &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
