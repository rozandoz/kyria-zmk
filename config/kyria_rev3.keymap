/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    behaviors {
        caps_hold_tap: caps_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPS_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "hold-preferred";
        };

        layer_hold_tap: layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        layer_hold_tap_with_qt: layer_hold_tap_with_qt {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TAP_WITH_QT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak-dh-layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TAB                             &kp Q  &kp W  &kp F         &kp P                     &kp B                                                                                                        &kp J                                &kp L                          &kp U      &kp Y    &kp SEMI  &kp BSLH
&caps_hold_tap LEFT_CONTROL ESCAPE  &kp A  &kp R  &kp S         &kp T                     &kp G                                                                                                        &kp M                                &kp N                          &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT                           &kp Z  &kp X  &kp C         &kp D                     &kp V                            &kp LEFT_BRACKET  &tog 1          &mo 7            &kp RIGHT_BRACKET        &kp K                                &kp H                          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                                  &kp LEFT_ALT  &layer_hold_tap 6 ESCAPE  &layer_hold_tap_with_qt 2 SPACE  &kp TAB           &kp LEFT_SHIFT  &kp RIGHT_SHIFT  &layer_hold_tap 4 ENTER  &layer_hold_tap_with_qt 3 BACKSPACE  &layer_hold_tap_with_qt 5 DEL  &kp RGUI
            >;
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T                                   &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT
&trans  &kp A  &kp S  &kp D   &kp F   &kp G                                   &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B   &trans  &tog 0  &trans  &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp C_AC_REDO  &kp K_PASTE    &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT     &trans         &kp CAPSLOCK
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP    &kp END       &kp INSERT     &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans         &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT                                      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI   &kp N4  &kp N5  &kp N6   &kp EQUAL                                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH   &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &kp DOT  &kp N0     &kp MINUS  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)  &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans         &kp LS(LPAR)   &kp LS(RPAR)  &kp LS(UNDER)  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        f-layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9      &kp PRINTSCREEN                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6      &kp SCROLLLOCK                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3      &kp PAUSE_BREAK  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &kp C_MENU  &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        media_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                      &trans            &trans        &trans        &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                      &kp C_PREVIOUS    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans            &trans        &trans        &trans      &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE    &trans
            >;
        };

        bt_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
